// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "Определяет можно ли подавать трафик на сервис",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Проверка готовности приложения",
                "operationId": "infoHealth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.Response"
                        }
                    }
                }
            }
        },
        "/update/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update metric in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "UpdateMetric",
                "parameters": [
                    {
                        "description": "metric request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2.Metrics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful metric update",
                        "schema": {
                            "$ref": "#/definitions/v2.Metrics"
                        }
                    }
                }
            }
        },
        "/value/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get metric from DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "GetOneMetric",
                "parameters": [
                    {
                        "description": "metric request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2.Metrics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful metric provision",
                        "schema": {
                            "$ref": "#/definitions/v2.Metrics"
                        }
                    },
                    "404": {
                        "description": "Metric not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v2.Metrics": {
            "type": "object",
            "properties": {
                "delta": {
                    "description": "exists if mType = counter",
                    "type": "integer"
                },
                "id": {
                    "description": "metrics name",
                    "type": "string"
                },
                "type": {
                    "description": "mType = counter || gauge",
                    "type": "string",
                    "enum": [
                        "gauge",
                        "counter"
                    ]
                },
                "value": {
                    "description": "exists if mType = gauge",
                    "type": "number"
                }
            }
        },
        "v2.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger API",
	Description:      "metric collection service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
